<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ">

	<!-- 自动注解 -->
	<mvc:annotation-driven/>

 	 <!-- 自动扫描 -->
	<context:component-scan base-package= "com.wsh.base.*">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
		<context:exclude-filter type ="annotation" expression= "org.springframework.stereotype.Service" />
	</context:component-scan >
	
	<!-- =======================资源路径整合区======================= -->
	<mvc:resources location="/reswsh/" mapping="/reswsh/**"/>
	<mvc:resources location="/baseimgs/" mapping="/baseimgs/**"/>
	<mvc:resources location="/myjs/" mapping="/myjs/**"/>
	<mvc:resources location="/extjsp/" mapping="/extjsp/**"/>
	<!-- ======================================================== -->
	


	<!-- 避免IE在ajax请求时，返回json出现下载 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />   <!-- JSON转换器 -->
			</list>
		</property>
	</bean>

	<!-- 对模型视图添加前后缀 ，视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/wsh/" p:suffix=".jsp" />

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	
 	<mvc:interceptors>
		<mvc:interceptor >
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/myjs/**"/>
			<mvc:exclude-mapping path="/reswsh/**"/>
			<mvc:exclude-mapping path="/Wx/loading/**"/>
			<mvc:exclude-mapping path="/wxpay/notifyFromWx"/>
			<bean id="authorization" class="com.wsh.base.intercepter.Authorization" />
		</mvc:interceptor>	
	</mvc:interceptors>


	<!-- 启动触发器的配置开始 -->
<!-- 	<bean name="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myJobTrigger" />
			</list>
		</property>
	</bean> -->
	<!-- 启动触发器的配置结束 -->
	<!-- quartz-2.x的配置 -->
<!-- 	<bean id="myJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="myJobDetail" />
		</property>
		<property name="cronExpression">

			<value>0 0 10 * * ?</value>
		</property>
	</bean> -->
	<!-- 		微信在次日9点启动生成前一天的对账单，建议商户10点后再获取 -->
	<!-- 调度的配置结束 -->

	<!-- job的配置开始 -->
	<!-- <bean id="myJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="myJob" />
		</property>
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean> -->
	<!-- job的配置结束 -->
	<!-- <bean id="myJob" class="com.wsh.base.job.Job4Bill" />
	<bean class="com.wsh.base.util.ApplicationContextUtil"/> -->
</beans>